[gcode_macro PRINT_START]
gcode:
    {% set CHAMBER_TEMP = params.CHAMBER_TEMP|default(0)|int %}
    {% set BED_TEMP = params.BED_TEMP|default(110)|int %}
    {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(245)|int %}
    {% set EXTRUDER_PRE = params.EXTRUDER_PRE|default(150)|int %}
    STATUS_HEATING                                        # Set LEDs
    M190 S{BED_TEMP}                                      # Start bed heating
    M109 S{EXTRUDER_PRE}                                  # Probe temp
    #TEMPERATURE_WAIT SENSOR="temperature_sensor Chamber" MINIMUM={CHAMBER_TEMP}
    BED_MESH_CLEAR                                        # Clear any saved mesh
    BED_MESH_PROFILE REMOVE=default                       # X2
    M220 S100                                             # Reset feedrate
    G90                                                   # Absolute positioning 
    G21                                                   # Metric values
    M83                                                   # Set extruder to relative mode
    G32                                                   # Home all, QGL             
    STATUS_MESHING                                        # Set LEDs
    BED_MESH_CALIBRATE                                    # Create mesh
    BED_MESH_PROFILE LOAD=default                         # Load mesh if not already
    Smart_Park                                            # Park toolhead
    STATUS_HEATING                                        # Set LEDs
    M109 S{EXTRUDER_TEMP}                                 # Printing temp
    STATUS_PRINTING                                       # Set LEDs
    M83                                                   # Set extruder to relative mode
    G1 E5 F600                                            # unretract filament
    G92 E0                                                # zero the extruder
    VORON_PURGE                                           # Adaptive purge
    M83                                                   # Set extruder to relative mode
    SKEW_PROFILE LOAD=my_skew_profile                     # Enable skew correction
    M118 Printing...

[gcode_macro PRINT_END]
gcode:
    {% set th = printer.toolhead %}
    {% set x_safe = th.position.x + 20 * (1 if th.axis_maximum.x - th.position.x > 20 else -1) %}
    {% set y_safe = th.position.y + 20 * (1 if th.axis_maximum.y - th.position.y > 20 else -1) %}
    {% set z_safe = [th.position.z + 2, th.axis_maximum.z]|min %}
    
    SAVE_GCODE_STATE NAME=STATE_PRINT_END
    M400                                                          # wait for buffer to clear
    G90                                                           # absolute positioning
    G0 Z{z_safe} F3600
    G0 X{th.axis_maximum.x - 10} Y{th.axis_maximum.y - 10} F3600  # park nozzle at rear
    M107                                                          # turn off fan
    M83                                                           # Set extruder to relative mode
    G1 E-5 F600                                                   # retract filament
    G92 E0                                                        # zero the extruder
    SET_PRESSURE_ADVANCE ADVANCE=0.00                             # Set preasure advance
    M220 S100                                                     # Reset feedrate
    TURN_OFF_HEATERS
    BED_MESH_CLEAR
    BED_MESH_PROFILE REMOVE=default
    SET_SKEW CLEAR=1
    SET_FILAMENT_SENSOR SENSOR=filament_sensor ENABLE=0
    BEEP I=5
    STATUS_READY
    RESTORE_GCODE_STATE NAME=STATE_PRINT_END

[gcode_macro PAUSE]
description: Pause the actual running print
rename_existing: PAUSE_BASE
gcode:
  PAUSE_BASE
  _TOOLHEAD_PARK_PAUSE_CANCEL

[gcode_macro RESUME]
description: Resume the actual running print
rename_existing: RESUME_BASE
gcode:
  ##### read extrude from  _TOOLHEAD_PARK_PAUSE_CANCEL  macro #####
  {% set extrude = printer['gcode_macro _TOOLHEAD_PARK_PAUSE_CANCEL'].extrude %}
  #### get VELOCITY parameter if specified ####
  {% if 'VELOCITY' in params|upper %}
    {% set get_params = ('VELOCITY=' + params.VELOCITY)  %}
  {%else %}
    {% set get_params = "" %}
  {% endif %}
  ##### end of definitions #####
  {% if printer.extruder.can_extrude|lower == 'true' %}
    M83
    G1 E{extrude} F2100
    {% if printer.gcode_move.absolute_extrude |lower == 'true' %} M82 {% endif %}
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}  
  RESUME_BASE {get_params}

[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
rename_existing: CANCEL_PRINT_BASE
variable_park: True
gcode:
  {% if printer.pause_resume.is_paused|lower == 'false' and park|lower == 'true'%}
    _TOOLHEAD_PARK_PAUSE_CANCEL
  {% endif %}
  TURN_OFF_HEATERS
  CANCEL_PRINT_BASE
  PRINT_END

[gcode_macro _TOOLHEAD_PARK_PAUSE_CANCEL]
description: Helper: park toolhead used in PAUSE and CANCEL_PRINT
variable_extrude: 12.0
gcode:
  ##### set park positon for x and y #####
  # default is your max posion from your printer.cfg
  {% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}
  {% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}
  {% set z_park_delta = 2.0 %}
  ##### calculate save lift position #####
  {% set max_z = printer.toolhead.axis_maximum.z|float %}
  {% set act_z = printer.toolhead.position.z|float %}
  {% if act_z < (max_z - z_park_delta) %}
    {% set z_safe = z_park_delta %}
  {% else %}
    {% set z_safe = max_z - act_z %}
  {% endif %}
  ##### end of definitions #####
  {% if printer.extruder.can_extrude|lower == 'true' %}
    M83
    G1 E-{extrude} F2100
    {% if printer.gcode_move.absolute_extrude |lower == 'true' %} M82 {% endif %}
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}
  {% if "xyz" in printer.toolhead.homed_axes %}
    G91
    G1 Z{z_safe} F900
    G90
    G1 X{x_park} Y{y_park} F6000
    {% if printer.gcode_move.absolute_coordinates|lower == 'false' %} G91 {% endif %}
  {% else %}
    {action_respond_info("Printer not homed")}
  {% endif %}
    